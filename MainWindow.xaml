<Window x:Class="Completist.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Completist"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        mc:Ignorable="d"
        MouseDown="Window_MouseDown"
        WindowState="Maximized"
        WindowStartupLocation="CenterScreen"
        Title="Completist - Home" Height="720" Width="1000">
    <!--Mousedown & First Grid-->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Loaded_Command}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <DataTemplate x:Key="dtMyTags">
            <TextBox Background="{Binding Color}"
                             IsReadOnly="True"
                             Foreground="White"
                             FontSize="18"
                             Style="{StaticResource MyCustomFont}"
                             Cursor="Hand"
                             FontWeight="Normal"
                             SelectionBrush="Transparent"
                             BorderBrush="Transparent"
                             BorderThickness="0"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Right"                                    
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Center"
                             Text="{Binding StrName}"
                             Grid.Row="0"
                             Height="35" FontFamily="/Completist;component/Font/#Quicksand">
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="20"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
        </DataTemplate>
        <DataTemplate x:Key="dtMyPrioritiesX">
            <TextBox Background="{Binding Color}"
                             IsReadOnly="True"
                             Foreground="White"
                             FontSize="22"
                                                  Style="{StaticResource MyCustomFont}"
                             FontWeight="Bold"
                             Cursor="Hand"
                             SelectionBrush="Transparent"
                             BorderBrush="Transparent"
                             BorderThickness="0"
                             VerticalAlignment="Top"
                             HorizontalAlignment="Right"
                             Margin="10"        
                             ToolTip="Priority type"
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Center"
                             Text="{Binding StrName}"
                             Grid.Row="0"
                             Height="35"
                             MinWidth="200" FontFamily="/Completist;component/Font/#Quicksand">
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="20"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
        </DataTemplate>
        <DataTemplate x:Key="dtMyPriorities">
            <TextBox Background="{Binding Priority.Color}"
                             IsReadOnly="True"
                             Foreground="White"
                             FontSize="22"
                                                  Style="{StaticResource MyCustomFont}"
                             FontWeight="Normal"
                             SelectionBrush="Transparent"
                             BorderBrush="Transparent"
                             BorderThickness="0"
                             VerticalAlignment="Top"
                             HorizontalAlignment="Right"
                             Margin="10"        
                             ToolTip="Priority type"
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Center"
                             Text="{Binding Priority.StrName}"
                             Grid.Row="0"
                             Height="35"
                             MinWidth="200">
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="20"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
        </DataTemplate>
        <DataTemplate x:Key="dtMyContent">
            <Border BorderBrush="Transparent" BorderThickness="0"
                    CornerRadius="10" x:Name="brd"
                    VerticalAlignment="Stretch"
                    Height="200" 
                                                 Style="{StaticResource MyCustomFont}"
                    HorizontalAlignment="Stretch"
                    Background="#201f20">
                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Focusable="True" Name="gridMain">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="80"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Complete" x:Name="completebtn"
                        Foreground="White"
                        Background="#FF0F9F5C"                           
                        BorderThickness="0"
                        BorderBrush="Transparent"
                        Cursor="Hand"
                                                             Style="{StaticResource MyCustomFont}"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        Width="80"
                        Margin="0"
                        FontWeight="DemiBold"
                        FontSize="14"
                        Command="{Binding DataContext.CompleteTask_Command,
         RelativeSource={RelativeSource AncestorType=ListView}}" FontFamily="/Completist;component/Font/#Quicksand">
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                    <Setter Property="Opacity" Value="0"></Setter>
                                    <Setter Property="CornerRadius" Value="10,0,0,10"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                                            <!--<Setter Property="Visibility" Value="Visible" />-->
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2">
                                                            <DoubleAnimation.EasingFunction>
                                                                <BackEase EasingMode="EaseOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"  From="1" To="0" Duration="0:0:1">
                                                            <DoubleAnimation.EasingFunction>
                                                                <QuinticEase EasingMode="EaseOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Resources>
                        </Button>
                    </StackPanel>
                    <Button Content="Delete"
                        Foreground="White"
                        Background="#FF871B22"
                        BorderThickness="0"
                        BorderBrush="Transparent"
                        Cursor="Hand"
                        Grid.Column="2"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        Width="80"
                        Margin="0"
                        FontWeight="DemiBold"
                                                         Style="{StaticResource MyCustomFont}"
                        FontSize="14"
                        Command="{Binding DataContext.RemoveTask_Command,
         RelativeSource={RelativeSource AncestorType=ListView}}" FontFamily="/Completist;component/Font/#Quicksand">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="0,10,10,0"/>
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="Opacity" Value="0"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2">
                                                        <DoubleAnimation.EasingFunction>
                                                            <BackEase EasingMode="EaseOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"  From="1" To="0" Duration="0:0:1">
                                                        <DoubleAnimation.EasingFunction>
                                                            <QuinticEase EasingMode="EaseOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Resources>
                    </Button>

                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBox Background="Transparent"
                             IsReadOnly="True"
                             Foreground="White"
                             FontSize="32"
                             FontWeight="DemiBold"
                             SelectionBrush="LightGreen"
                             BorderBrush="Transparent"
                             BorderThickness="0"
                             VerticalAlignment="Top"
                             HorizontalAlignment="Left"
                             Margin="10"
                             ToolTip="Task name"
                             VerticalContentAlignment="Center"
                                                              Style="{StaticResource MyCustomFont}"
                             HorizontalContentAlignment="Center"
                             Text="{Binding Name, Mode=TwoWay}"
                             x:Name="txtName"
                             Grid.Row="0" FontFamily="/Completist;component/Font/#Quicksand"/>
                        <TextBox Background="Transparent"
                             IsReadOnly="True"
                             x:Name="txtContent"
                             Visibility="Collapsed"
                             Foreground="White"
                             FontSize="20"
                             TextWrapping="Wrap"
                                                              Style="{StaticResource MyCustomFont}"
                             FontWeight="DemiBold"
                             SelectionBrush="LightGreen"
                             BorderBrush="White"
                             BorderThickness="0,0,0,1"                                
                             VerticalAlignment="Center"
                             HorizontalAlignment="Center"
                             Margin="10"
                             ToolTip="Task content"
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Center"
                             Text="{Binding Content}"
                             Grid.Row="0"
                             Grid.RowSpan="2"
                             MinWidth="500" FontFamily="/Completist;component/Font/#Quicksand"/>
                        <TextBox Background="{Binding Priority.Color}"
                             IsReadOnly="True"
                             Foreground="White"
                             FontSize="22"
                             FontWeight="Bold"
                                                              Style="{StaticResource MyCustomFont}"
                             SelectionBrush="Transparent"
                             BorderBrush="Transparent"
                             BorderThickness="0"
                             VerticalAlignment="Top"
                             HorizontalAlignment="Right"
                             Margin="10"        
                             Cursor="Hand"
                             ToolTip="Priority type"
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Center"
                             Text="{Binding Priority.StrName}"
                             Grid.Row="0"
                             Height="35"
                             MinWidth="200" FontFamily="/Completist;component/Font/#Quicksand">
                            <!--<i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding DataContext.ChangePriority_Command,
         RelativeSource={RelativeSource AncestorType=ListView}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>-->
                            <TextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="20"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>
                        <ListView ItemsSource="{Binding Path=TagList}" Visibility="Visible"
                              BorderThickness="0" BorderBrush="Transparent" IsHitTestVisible="False"
                              ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                  Margin="10" Cursor="Hand"                              Style="{StaticResource MyCustomFont}"
                                        Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                        VerticalAlignment="Bottom"  ItemTemplate="{StaticResource dtMyTags}"                             
                                        HorizontalAlignment="Left" Grid.Row="2" ToolTip="Assigned tags">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding DataContext.ChangeTag_Command, RelativeSource={RelativeSource AncestorType=ListView}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"></StackPanel>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                        </ListView>

                        <TextBox Background="#2b2a2b"
                             IsReadOnly="True"
                             Foreground="White"
                             FontSize="20"
                             FontWeight="Normal"
                             SelectionBrush="Transparent"
                             BorderBrush="Transparent"
                             BorderThickness="0"
                             VerticalAlignment="Bottom"
                             HorizontalAlignment="Right"
                             Margin="5" Cursor="Arrow"
                             VerticalContentAlignment="Center"
                             ToolTip="When's the task due"
                             HorizontalContentAlignment="Center"
                             Text="{Binding StrDue}"
                             Grid.Row="2"
                             Height="35"
                                                              Style="{StaticResource MyCustomFont}"
                             MinWidth="170">
                            <TextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="20"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>
                        <!--<TextBox Background="#2b2a2b"   MEANT TO BE START DATE - WORK IN PROGRESS
                             IsReadOnly="True"
                             Foreground="White"
                             FontSize="20"
                             FontWeight="Normal"
                             SelectionBrush="Transparent"
                             BorderBrush="Transparent"
                             BorderThickness="0"
                             VerticalAlignment="Bottom"
                             HorizontalAlignment="Center"
                             Margin="5" Cursor="Arrow"
                             VerticalContentAlignment="Center"
                             ToolTip="When's the task due"
                             HorizontalContentAlignment="Center"
                             Text="{Binding Due}"
                             Grid.Row="2"
                             Height="35"
                                                              Style="{StaticResource MyCustomFont}"
                             MinWidth="170">
                            <TextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="20"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>-->
                    </Grid>

                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding
                                    RelativeSource={RelativeSource
                                    Mode=FindAncestor,
                                    AncestorType={x:Type ListViewItem}},
                                    Path=IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Height" From="200" To="250" Duration="Automatic">
                                    <DoubleAnimation.EasingFunction>
                                        <QuinticEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Height" From="250" To="200" Duration="Automatic">
                                    <DoubleAnimation.EasingFunction>
                                        <QuinticEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>



                    <!--<Setter TargetName="brd" Property="Border.Height" Value="250"/>-->
                    <Setter TargetName="completebtn" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="txtContent" Property="TextBox.Visibility" Value="Visible"/>
                    <Setter TargetName="txtContent" Property="TextBox.IsReadOnly" Value="False"/>
                    <Setter TargetName="txtName" Property="TextBox.IsReadOnly" Value="False"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding
                                    RelativeSource={RelativeSource
                                    Mode=FindAncestor,
                                    AncestorType={x:Type ListViewItem}},
                                    Path=IsSelected}" Value="True">
                    <Setter TargetName="brd" Property="Border.BorderBrush" Value="DarkGoldenrod"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Window.Resources>
    <Grid Background="#FF121212" x:Name="grdAll">
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" x:Name="grdNaslov">
            <TextBlock Text="{Binding title}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left"
                       Margin="25,0"
                       TextAlignment="Center"
                       FontSize="32"
                                                    Style="{StaticResource MyCustomFont}"
                       Foreground="White"
                       FontWeight="Light"/>
            <!--<TextBlock Text="0"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Right"
                       Margin="688.758,20.8,286.758,20.8"
                       TextAlignment="Center"
                       FontSize="32"
                       FontFamily="/Completist;component/Font/#Quicksand"
                                                    Style="{StaticResource MyCustomFont}"
                       Foreground="White"
                       FontWeight="Bold"/>-->

            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        Margin="0,2,2,0" Height="78" Width="317">

                <!--<Button VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        VerticalContentAlignment="Center"
                        HorizontalContentAlignment="Center"
                        Background="Transparent"
                                                     Style="{StaticResource MyCustomFont}"
                        BorderThickness="0"
                        Command="{Binding History_Command}">
                    <Button.Content>
                        <Image VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="20,0"
                       Height="40" Width="40"
                       ToolTip="Task History"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       Source="/Resources/History.png"
                       Cursor="Hand" Visibility="Hidden"/>
                    </Button.Content>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="bdr_main" CornerRadius="0" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="bdr_main" Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>-->

                <!--<Button VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        VerticalContentAlignment="Center"
                        HorizontalContentAlignment="Center"
                        Background="Transparent"
                                                     Style="{StaticResource MyCustomFont}"
                        BorderThickness="0"
                        Command="{Binding History_Command}">
                    <Button.Content>
                        <Image VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="20,0"
                       Height="40" Width="40"
                       ToolTip="Task History"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       Source="/Resources/History.png"
                       Cursor="Hand" Visibility="Hidden"/>
                    </Button.Content>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="bdr_main" CornerRadius="0" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="bdr_main" Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>-->

                <!--<Button VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        VerticalContentAlignment="Center"
                        HorizontalContentAlignment="Center"
                        Background="Transparent"
                                                     Style="{StaticResource MyCustomFont}"
                        BorderThickness="0"
                        Command="{Binding History_Command}">
                    <Button.Content>
                        <Image VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="20,0"
                       Height="40" Width="40"
                       ToolTip="Task History"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       Source="/Resources/History.png"
                       Cursor="Hand" Visibility="Hidden"/>
                    </Button.Content>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="bdr_main" CornerRadius="0" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="bdr_main" Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>-->

                <!--<Button VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        VerticalContentAlignment="Center"
                        HorizontalContentAlignment="Center"
                        Background="Transparent"
                                                     Style="{StaticResource MyCustomFont}"
                        BorderThickness="0"
                        Command="{Binding History_Command}">
                    <Button.Content>
                        <Image VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="20,0"
                       Height="40" Width="40"
                       ToolTip="Task History"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       Source="/Resources/History.png"
                       Cursor="Hand" Visibility="Hidden"/>
                    </Button.Content>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="bdr_main" CornerRadius="0" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="bdr_main" Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>-->

                <TextBlock Text="{Binding complete, FallbackValue=0}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="25"
                       TextAlignment="Center"
                       FontSize="36"
                       FontFamily="/Completist;component/Font/#Quicksand"
                                                    Style="{StaticResource MyCustomFont}"
                       Foreground="White"
                       FontWeight="Bold"/>

                <Button Background="Transparent"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        VerticalContentAlignment="Center"
                        HorizontalContentAlignment="Center"
                        BorderThickness="0"
                        Command="{Binding Data_Command}">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="bdr_main" CornerRadius="0" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="bdr_main" Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <Image VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Margin="20,0"
                               Height="40" Width="40"
                               ToolTip="Data manipulation..."
                               RenderOptions.BitmapScalingMode="HighQuality"
                               Source="Data.png"
                               Cursor="Hand"/>
                </Button>
                
                <Button Background="Transparent"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        VerticalContentAlignment="Center"
                        HorizontalContentAlignment="Center"
                        BorderThickness="0"
                        Command="{Binding GCalendar_Command}">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="bdr_main" CornerRadius="0" BorderThickness="1" BorderBrush="Transparent" Background="{x:Null}">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                    <Image VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Margin="20,0"
                               Height="40" Width="40"
                               ToolTip="Data manipulation..."
                               RenderOptions.BitmapScalingMode="HighQuality"
                               Source="Next.png"
                               Cursor="Hand"/>
                </Button>

                <Button VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        VerticalContentAlignment="Center"
                        HorizontalContentAlignment="Center"
                        Background="Transparent"
                        BorderThickness="0"
                        Command="{Binding Search_Command}">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="bdr_main" CornerRadius="0" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="bdr_main" Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <Image VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="20,0"
                       Height="40" Width="40"
                       ToolTip="Search Tasks"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       Source="Search.png"
                       Cursor="Hand"/>
                </Button>


            </StackPanel>

        </Grid>
        <Grid Grid.Row="1" Height="{Binding searchHeight, UpdateSourceTrigger=PropertyChanged}">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        Margin="50,0">
                <Image Height="40"
                       Width="40"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       Source="/Resources/Search.png"/>
                <TextBox Text="{Binding filterText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center"
                         VerticalContentAlignment="Center"
                         HorizontalContentAlignment="Center"
                         Foreground="White"
                         ToolTip="Serach Taks Name"
                         Background="Transparent"
                         BorderThickness="0,0,0,1"
                         Margin="20,0"
                         BorderBrush="White"
                         FontWeight="DemiBold"
                         Height="40"
                         Width="400"
                         FontSize="14" SelectionBrush="{x:Null}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding SearchTaskText_Command}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </StackPanel>

            <Grid Grid.Row="1"
                  VerticalAlignment="Stretch"
                  HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <ListView ItemsSource="{Binding Path=listOfTags, UpdateSourceTrigger=PropertyChanged}"  Visibility="Visible" 
                      BorderBrush="Transparent"
                      Margin="50,20,10,20" SelectionMode="Single"
                      HorizontalContentAlignment="Stretch"                      
                      SelectedItem="{Binding selectedTag_Search, Mode=TwoWay}"
                      BorderThickness="0" ItemTemplate="{StaticResource dtMyTags}"
                      Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      HorizontalAlignment="Stretch" Grid.Row="0"
                      ToolTip="Search by Tag">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SearchTaskText_Command}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Style.Triggers>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="IsSelected" Value="True"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"></WrapPanel>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                </ListView>

                <ListView ItemsSource="{Binding Path=listOfPriorities, UpdateSourceTrigger=PropertyChanged}"  Visibility="Visible" 
                      BorderBrush="Transparent"
                      x:Name="lstP"
                      ToolTip="Search by Priority"
                      SelectedItem="{Binding selectedPriority_Search, Mode=TwoWay}"
                      Margin="10,20" SelectionMode="Single"
                      HorizontalContentAlignment="Left"                      
                      BorderThickness="0" ItemTemplate="{StaticResource dtMyPrioritiesX}"
                      Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.VerticalScrollBarVisibility="Hidden"
                      HorizontalAlignment="Stretch" Grid.Column="1">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SearchTaskText_Command}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Style.Triggers>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="IsSelected" Value="False"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical"></WrapPanel>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                </ListView>
            </Grid>
        </Grid>
        <Grid Grid.Row="2" Background="#FF232323">

            <Grid VerticalAlignment="Stretch"
                  HorizontalAlignment="Stretch"
                  x:Name="grdContent" x:FieldModifier="public"/>
            <ListView ItemsSource="{Binding Path=myContent, UpdateSourceTrigger=PropertyChanged}" x:Name="lst" Visibility="Visible"
                      BorderBrush="Transparent"
                      Margin="10,20" 
                      HorizontalContentAlignment="Stretch"
                      BorderThickness="0" ItemTemplate="{StaticResource dtMyContent}"
                      SelectedItem="{Binding selectedTask, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      HorizontalAlignment="Stretch" Grid.Row="3">
                <ListView.Effect>
                    <DropShadowEffect RenderingBias="Quality" BlurRadius="15" Opacity="1" Direction="310"/>
                </ListView.Effect>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Margin" Value="10" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding RemoveSelection_Command}"/> <!--If something goes wrong, it's probably this line.-->
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseDoubleClick" >
                        <i:InvokeCommandAction Command="{Binding lstSelectionChanged_Command}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListView>

            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Right">
                <Button VerticalAlignment="Bottom"
                    HorizontalAlignment="Right"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Background="Transparent"
                    Command="{Binding Refresh_Command}"
                    Visibility="{Binding visibleNew}"
                    Margin="20,40"
                    Panel.ZIndex="9999">
                    <Button.Content>
                        <Image VerticalAlignment="Bottom"
                       HorizontalAlignment="Right"
                       Panel.ZIndex="9999"
                       Height="60" Width="60"
                       ToolTip="Refresh list"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       Source="/Resources/Refresh.png"
                       Cursor="Hand"/>
                    </Button.Content>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="bdr_main" CornerRadius="0" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="bdr_main" Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <Button VerticalAlignment="Bottom"
                    HorizontalAlignment="Right"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Background="Transparent"
                    Command="{Binding NewTask_Command}"
                    Visibility="{Binding visibleNew}"
                    Margin="20,40"
                    Panel.ZIndex="9999">
                    <Button.Content>
                        <Image VerticalAlignment="Bottom"
                       HorizontalAlignment="Right"
                       Panel.ZIndex="9999"
                       Height="60" Width="60"
                       ToolTip="Add new"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       Source="/Resources/Add.png"
                       Cursor="Hand"/>
                    </Button.Content>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="bdr_main" CornerRadius="0" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="bdr_main" Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

            </StackPanel>
            <Button VerticalAlignment="Bottom"
                    HorizontalAlignment="Right"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Background="Transparent"
                    Visibility="{Binding visibleExit}"
                    Command="{Binding Exit_Command}"
                    Margin="20,40"
                    Panel.ZIndex="9999">
                <Button.Content>
                    <Image VerticalAlignment="Bottom"
                       HorizontalAlignment="Right"
                       Panel.ZIndex="9999"
                       Height="60" Width="60"
                       ToolTip="Add new"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       Source="/Resources/Add.png"
                       Cursor="Hand"/>
                </Button.Content>
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bdr_main" CornerRadius="0" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bdr_main" Property="Background" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>
    </Grid>
</Window>
